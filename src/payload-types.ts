/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    admins: AdminAuthOperations;
    students: StudentAuthOperations;
  };
  blocks: {};
  collections: {
    admins: Admin;
    courses: Course;
    media: Media;
    events: Event;
    students: Student;
    pending: Pending;
    comment: Comment;
    'course-lesson-views': CourseLessonView;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    admins: AdminsSelect<false> | AdminsSelect<true>;
    courses: CoursesSelect<false> | CoursesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    students: StudentsSelect<false> | StudentsSelect<true>;
    pending: PendingSelect<false> | PendingSelect<true>;
    comment: CommentSelect<false> | CommentSelect<true>;
    'course-lesson-views': CourseLessonViewsSelect<false> | CourseLessonViewsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user:
    | (Admin & {
        collection: 'admins';
      })
    | (Student & {
        collection: 'students';
      });
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface AdminAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface StudentAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * Los usuarios con permisos para administrar el contenido del sitio web y la Escuela.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins".
 */
export interface Admin {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * Los cursos de Voz y Cuento.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses".
 */
export interface Course {
  id: number;
  /**
   * El nombre del curso
   */
  name: string;
  /**
   * Si está seleccionado, el curso se mostrará en la lista de cursos.
   */
  isPublished?: boolean | null;
  /**
   * Si está seleccionado, el curso se mostrará como "Próximamente" en la lista de Cursos.
   */
  isComingSoon?: boolean | null;
  isFree?: boolean | null;
  /**
   * El precio para alumnos dentro de Argentina.
   */
  arsPrice: number;
  /**
   * El precio para alumnos fuera de Argentina.
   */
  usdPrice: number;
  /**
   * Pequeña introducción al curso. Se muestra en la tarjeta del curso. Máximo 100 caracteres.
   */
  shortDescription: string;
  /**
   * Descipción detallada del curso. Se muestra en la página de detalle del curso
   */
  longDescription?: string | null;
  /**
   * Esta imágen se muestra en la tarjeta del Curso.
   */
  image: number | Media;
  /**
   * Elegir el tipo de curso.
   */
  category: 'Taller' | 'Laboratorio' | 'Seminario';
  /**
   * Un punteo de los temas que se ven en el curso (no van los títulos del los videos, sólo de qué trata cada curso). Se muestra en el detalle del Curso.
   */
  syllabus?:
    | {
        unit?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Los bloques del curso.
   */
  blocks?:
    | {
        name?: string | null;
        /**
         * Agregar clases: videos, ejercicios y materiales adicionales.
         */
        content?:
          | (
              | {
                  /**
                   * Link al video de Youtube
                   */
                  link: string;
                  /**
                   * Un texto para acompañar el video
                   */
                  content?: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  } | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'video';
                }
              | {
                  /**
                   * Un texto para acompañar la presentación
                   */
                  content?: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  } | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'presentation';
                }
              | {
                  content: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'exercise';
                }
              | {
                  material: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'additional-material';
                }
              | {
                  content: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'archive';
                }
            )[]
          | null;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  /**
   * Una descripción para el usuario por si la imágen falla en su carga.
   */
  alt?: string | null;
  _key?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: number;
  /**
   * El nombre del Evento para contratar.
   */
  title: string;
  /**
   * De qué trata el evento. Se ve en la tarjeta del evento en la página de Espectáculos.
   */
  description: string;
  category: 'Maternal' | 'Infantil' | 'Familiar' | 'Adultos' | 'Personalizado';
  /**
   * Esta imágen se muestra en la tarjeta del Evento.
   */
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * Estos son las personas registradas en la aplicación.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "students".
 */
export interface Student {
  id: number;
  name?: string | null;
  /**
   * Número de Whatsapp para contactar.
   */
  whatsapp?: string | null;
  /**
   * Cursos a los que el alumno pertenece.
   */
  courses?: (number | Course)[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pending".
 */
export interface Pending {
  id: number;
  course: number | Course;
  student: number | Student;
  isPaid: boolean;
  updatedAt: string;
  createdAt: string;
}
/**
 * Comentarios de un lección dentro de un bloque de un Curso.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comment".
 */
export interface Comment {
  id: number;
  comment?: string | null;
  /**
   * El curso al que pertenece el comentario.
   */
  course?: (number | null) | Course;
  /**
   * El bloque del curso al que pertenece el comentario.
   */
  blockId: string;
  /**
   * La lección del curso al que pertenece el comentario.
   */
  lessonId: string;
  /**
   * El nombre del autor del comentario.
   */
  author?: string | null;
  /**
   * Indica si el comentario es resaltado.
   */
  highlighted?: boolean | null;
  /**
   * Respuestas a este comentario.
   */
  responses?:
    | {
        response?: string | null;
        /**
         * Indica si la respuesta al comentario es resaltada.
         */
        highlighted?: boolean | null;
        /**
         * El nombre del autor de la respuesta.
         */
        author?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "course-lesson-views".
 */
export interface CourseLessonView {
  id: number;
  course?: (number | null) | Course;
  student?: (number | null) | Student;
  data?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^[a-zA-Z0-9]+$".
     */
    [k: string]: string[];
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'admins';
        value: number | Admin;
      } | null)
    | ({
        relationTo: 'courses';
        value: number | Course;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'events';
        value: number | Event;
      } | null)
    | ({
        relationTo: 'students';
        value: number | Student;
      } | null)
    | ({
        relationTo: 'pending';
        value: number | Pending;
      } | null)
    | ({
        relationTo: 'comment';
        value: number | Comment;
      } | null)
    | ({
        relationTo: 'course-lesson-views';
        value: number | CourseLessonView;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'admins';
        value: number | Admin;
      }
    | {
        relationTo: 'students';
        value: number | Student;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user:
    | {
        relationTo: 'admins';
        value: number | Admin;
      }
    | {
        relationTo: 'students';
        value: number | Student;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins_select".
 */
export interface AdminsSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses_select".
 */
export interface CoursesSelect<T extends boolean = true> {
  name?: T;
  isPublished?: T;
  isComingSoon?: T;
  isFree?: T;
  arsPrice?: T;
  usdPrice?: T;
  shortDescription?: T;
  longDescription?: T;
  image?: T;
  category?: T;
  syllabus?:
    | T
    | {
        unit?: T;
        id?: T;
      };
  blocks?:
    | T
    | {
        name?: T;
        content?:
          | T
          | {
              video?:
                | T
                | {
                    link?: T;
                    content?: T;
                    id?: T;
                    blockName?: T;
                  };
              presentation?:
                | T
                | {
                    content?: T;
                    id?: T;
                    blockName?: T;
                  };
              exercise?:
                | T
                | {
                    content?: T;
                    id?: T;
                    blockName?: T;
                  };
              'additional-material'?:
                | T
                | {
                    material?: T;
                    id?: T;
                    blockName?: T;
                  };
              archive?:
                | T
                | {
                    content?: T;
                    id?: T;
                    blockName?: T;
                  };
            };
        id?: T;
      };
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  _key?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  category?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "students_select".
 */
export interface StudentsSelect<T extends boolean = true> {
  name?: T;
  whatsapp?: T;
  courses?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pending_select".
 */
export interface PendingSelect<T extends boolean = true> {
  course?: T;
  student?: T;
  isPaid?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comment_select".
 */
export interface CommentSelect<T extends boolean = true> {
  comment?: T;
  course?: T;
  blockId?: T;
  lessonId?: T;
  author?: T;
  highlighted?: T;
  responses?:
    | T
    | {
        response?: T;
        highlighted?: T;
        author?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "course-lesson-views_select".
 */
export interface CourseLessonViewsSelect<T extends boolean = true> {
  course?: T;
  student?: T;
  data?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}